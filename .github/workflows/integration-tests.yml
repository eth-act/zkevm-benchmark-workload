name: Integration tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  ERE_TAG: 0.0.12-7514710

jobs: 
  witness-generator:
    name: Generate EEST benchmark fixtures
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt
      
      - name: Generate benchmark fixtures
        run: RUST_LOG=info cargo run -p witness-generator-cli --release -- tests --include 1M- --include Prague
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check zkevm-fixtures-input folder has at least 1 file
        run: |
          echo "Files in zkevm-fixtures-input folder:"
          ls -l ./zkevm-fixtures-input
          if [ -z "$(ls -A ./zkevm-fixtures-input)" ]; then
            echo "zkevm-fixtures-input folder is empty"
            exit 1
          fi
  
  stateless-validator:
    name: "${{ format('{0} / {1} / {2}', matrix.el, matrix.test, matrix.zkvm) }}"
    runs-on: [self-hosted-ghr, size-xl-x64]
    strategy:
      fail-fast: false
      matrix:
        test:
          - execute_empty_block
          - execute_mainnet_blocks
          - execute_invalid_block
          - prove_empty_block
        zkvm: [sp1, risc0, openvm]
        el: [reth, ethrex]
        exclude:
          # Ethrex - Skipped combinations
          - el: ethrex
            test: execute_mainnet_blocks # Still quite heavy to run in CI
          - el: ethrex
            test: execute_invalid_blocks # Still quite heavy to run in CI
          - el: ethrex
            zkvm: risc0 # See https://github.com/eth-act/ere/issues/121
          - el: ethrex
            zkvm: openvm # See https://github.com/eth-act/ere/issues/168

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Install C toolchain dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang libclang-dev
      
      - name: Pull ere images
        run: |
          for variant in "base" "base-${{ matrix.zkvm }}" "cli-${{ matrix.zkvm }}"; do
            src="ghcr.io/eth-act/ere/ere-${variant}:${ERE_TAG}"
            dst="ere-${variant}:${ERE_TAG}"
            docker pull "$src"
            docker tag "$src" "$dst"
          done

      - name: Run benchmark
        run: CI=1 RAYON_NUM_THREADS=1 RUST_LOG=warn ZKVM=${{ matrix.zkvm }} EL=${{ matrix.el }} cargo test --release -p integration-tests -- --test-threads=1 ${{ matrix.test }}

  custom-guest:
    name: "${{ format('{0} / {1}', matrix.test, matrix.zkvm) }}"
    runs-on: [self-hosted-ghr, size-xl-x64]
    strategy:
      fail-fast: false
      matrix:
        test:
          - execute_empty_program
          - execute_panic_guest
          - prove_empty_program
          - prove_panic_guest
        zkvm: [sp1, risc0, zisk, openvm]
        exclude:
          # ZisK - ere image intentionally doesn't bake big proving key for CI
          - test: prove_empty_program
            zkvm: zisk
          - test: prove_panic_guest
            zkvm: zisk

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Install C toolchain dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang libclang-dev
      
      - name: Pull ere images
        run: |
          for variant in "base" "base-${{ matrix.zkvm }}" "cli-${{ matrix.zkvm }}"; do
            src="ghcr.io/eth-act/ere/ere-${variant}:${ERE_TAG}"
            dst="ere-${variant}:${ERE_TAG}"
            docker pull "$src"
            docker tag "$src" "$dst"
          done
        
      - name: Run benchmark
        run: CI=1 RUST_LOG=info,sp1_core_executor=warn ZKVM=${{ matrix.zkvm }} cargo test --release -p integration-tests -- --test-threads=1 ${{ matrix.test }}