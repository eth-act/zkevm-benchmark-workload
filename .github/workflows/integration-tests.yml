name: Integration tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always

jobs: 
  witness-generator:
    name: Generate EEST benchmark fixtures
    runs-on: [self-hosted-ghr, size-xl-x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: integration-witness
      
      - name: Download and Extract Fixtures
        run: |
          chmod +x ./scripts/download-and-extract-fixtures.sh
          ./scripts/download-and-extract-fixtures.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install C toolchain dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang libclang-dev
      
      - name: Generate benchmark fixtures
        run: RUST_LOG=info cargo run -p witness-generator-cli --release -- tests --include 1M- --include Prague

      - name: Check zkevm-fixtures-input folder has at least 1 file
        run: |
          echo "Files in zkevm-fixtures-input folder:"
          ls -l ./zkevm-fixtures-input
          if [ -z "$(ls -A ./zkevm-fixtures-input)" ]; then
            echo "zkevm-fixtures-input folder is empty"
            exit 1
          fi
  
  stateless-validator:
    name: Stateless validator guest
    runs-on: [self-hosted-ghr, size-xl-x64]
    strategy:
      fail-fast: false
      matrix:
        zkvm: [sp1]
        action: [execute]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
      
      - name: Download and Extract Fixtures
        run: |
          chmod +x ./scripts/download-and-extract-fixtures.sh
          ./scripts/download-and-extract-fixtures.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.zkvm }}
      
      - name: Install C toolchain dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang libclang-dev
      
      - name: Generate benchmark fixtures
        run: RUST_LOG=info cargo run -p witness-generator-cli --release -- tests --include 1M- --include Prague --include empty_block

      - name: Run benchmark
        run: RUST_LOG=info cargo run -p ere-hosts --release --features ${{ matrix.zkvm }} -- --action ${{ matrix.action }} stateless-validator
      
      - name: Check zkevm-metrics folder
        run: |
          find ./zkevm-metrics
          if [ ! -d "./zkevm-metrics" ]; then
            echo "zkevm-metrics folder does not exist"
            exit 1
          fi
          if [ ! -f "./zkevm-metrics/hardware.json" ]; then
            echo "hardware.json file does not exist in zkevm-metrics folder"
            exit 1
          fi
          zkvm_folder=$(find ./zkevm-metrics -type d -name "${{ matrix.zkvm }}-*" | head -n 1)
          if [ -z "$zkvm_folder" ]; then
            echo "No ${{ matrix.zkvm }} folder found in zkevm-metrics"
            exit 1
          fi
          ls -l ./zkevm-fixtures-input
          ls -l $zkvm_folder
          input_files_count=$(find ./zkevm-fixtures-input -type f | wc -l)
          zkvm_files_count=$(find $zkvm_folder -type f | wc -l)
          if [ "$input_files_count" -ne "$zkvm_files_count" ]; then
            echo "Mismatch in number of files: zkevm-fixtures-input has $input_files_count files, $zkvm_folder has $zkvm_files_count files"
            exit 1
          fi

  empty-program:
    name: Empty program guest
    runs-on: [self-hosted-ghr, size-xl-x64]
    strategy:
      fail-fast: false
      matrix:
        zkvm: [sp1]
        action: [execute, prove]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.zkvm }}
      
      - name: Install C toolchain dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang libclang-dev

      - name: Run benchmark
        run: RUST_LOG=info cargo run -p ere-hosts --release --features ${{ matrix.zkvm }} -- --action ${{ matrix.action }} empty-program
      
      - name: Check zkevm-metrics folder
        run: |
          find ./zkevm-metrics
          if [ ! -d "./zkevm-metrics" ]; then
            echo "zkevm-metrics folder does not exist"
            exit 1
          fi
          if [ ! -f "./zkevm-metrics/hardware.json" ]; then
            echo "hardware.json file does not exist in zkevm-metrics folder"
            exit 1
          fi
          zkvm_folder=$(find ./zkevm-metrics -type d -name "sp1-*" | head -n 1)
          if [ -z "$zkvm_folder" ]; then
            echo "No SP1 folder found in zkevm-metrics"
            exit 1
          fi
          if [ ! -f "$zkvm_folder/empty_program.json" ]; then
            echo "empty_program.json file does not exist in $zkvm_folder"
            exit 1
          fi
